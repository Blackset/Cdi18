fonction enleverListe(entrée premier: référence, entrée nom: chainenom): référence
	// cette fonction permet d'enlever un nom à liste elle renvoit faux si le nom n'est pas présent, vrai si le nom est enlevé
	
	// premier la première référence de la liste vaut null si la liste est vide
	
	// nom est le nom à retirer à la liste
	
fonction trouverMot(entrée nomCherché: chainenom, entrée nom: chainenom): booléen
	// cette fonction permet de comparer 2 chaines elle renvoie vrai si nouvNom est 	
	// identique à nom
	
	// nouvCherché est le nouveau nom à comparer avec le nom déja présent dans la liste
	
	// nom est le nom présent dans la liste

	
// VARIABLES
pointeurS: référence	// permet d'avancer dans la liste
pointeurP: référence	// référence précédente

début

	
		pointeurS:= premier
		pointeurP:= null
		
		tantque (pointeurS <> null) et (trouverMot(nom, pointeurS.nom) = faux) faire
		// arrêt quand le pointeur suivant vaut null ou quand le nom est supérieur	
			
			pointeurP:= pointeurS			//on conserve le précédent
			
			pointeurS:= pointeurS->.suivant	//on avance en récupérant la prochaine référence	
			
		fintantque
		
		si (pointeurS <> null) et (comparerMot(nom, pointeurS->.nom) = vrai) alors
			si (pointeurP = null) alors
			// si c'est le premier
				premier:= pointeurS->.suivant	// premier pointe sur le suivant
			sinon	
				pointeurP->.suivant:= pointeurS->.suivant	// sinon le précédent pointe sur le suivant
			finsi
			détruire(pointeurS)
		finsi
		
	
	
	retourner premier
fin
